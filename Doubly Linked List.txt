#include<iostream>
using namespace std;
class node{
  public:
  int data;
  node* next;
  
  node(int val){
   data=val;
   next=NULL;
  }
};
class circular{
  public:
  node*head;
  circular(){
   head=NULL; 
  }
  
  void inserthead(int val)
  {
   node*newnode=new node(val);
   if(head==NULL){
    head=newnode;
    newnode->next=head;
    return;
   }
   node*temp=head;
   while(temp->next!=head){
     temp=temp->next;
      }
   temp->next=newnode;
   newnode->next=head;
   head=newnode;
  
  }
  
  void display(){
    node*temp=head;
    do{
      cout<<temp->data;
      temp=temp->next;
    }while(temp!=head);
}

void check(){
  node*temp=head;
 for(int i=0;i<4;i++){
   cout<<temp->data<<" ";
   temp=temp->next;
 }
 cout<<endl;
}

void inserttail(int val){
    node*newnode=new node(val);
   node*temp=head;
    if(head==NULL){
        head=newnode;
        newnode->next=head;
    }
    else
    {
         
    while(temp->next!=head){
        temp=temp->next;
    }
    
    temp->next=newnode;
    newnode->next=head;
    
}
}
void printhead(){
    node*temp=head->next;
    cout<<temp->next->next->data;
}
};
int main() {

  circular c;

  c.inserttail(1);
  c.inserttail(2);
  c.inserttail(3);
  c.inserthead(4);
  c.display();
  
}